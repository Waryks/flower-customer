# PostgreSQL datasource configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${POSTGRES_USERNAME}
quarkus.datasource.password=${POSTGRES_PASSWORD}

quarkus.datasource.jdbc.url=${POSTGRES_URL}
quarkus.datasource.jdbc.max-size=16

# Hibernate ORM configuration
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true

# Global
quarkus.http.root-path=/flower-customer
quarkus.http.port=8081
quarkus.swagger-ui.always-include=true
quarkus.http.cors=true

# Flower shop communication
quarkus.rest-client.flower-shop.url=${FLOWERSHOP_URL}
quarkus.rest-client.flower-shop.connect-timeout=10000
quarkus.rest-client.flower-shop.read-timeout=50000

# Flower details communication
quarkus.rest-client.flower-details.url=${FLOWERDETAILS_URL}
quarkus.rest-client.flower-details.connect-timeout=10000
quarkus.rest-client.flower-details.read-timeout=50000

# Inbound
mp.messaging.incoming.flower-shop.connector=smallrye-rabbitmq
mp.messaging.incoming.flower-shop.exchange.name=flower-shop
mp.messaging.incoming.flower-shop.queue.name=flower-shop

rabbitmq-host=localhost
rabbitmq-port=5672
rabbitmq-username=guest
rabbitmq-password=guest


mp.messaging.incoming.flower-shop-kafka.connector=smallrye-kafka
mp.messaging.incoming.flower-shop-kafka.topic=flower-shop-kafka
mp.messaging.incoming.flower-shop-kafka.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.flower-shop-kafka.broadcast=true
#kafka.bootstrap.servers=localhost:9092

# Security
mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=https://beautyfulflowers.com

quarkus.native.resources.includes=publicKey.pem